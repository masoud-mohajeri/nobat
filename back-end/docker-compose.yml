version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nobat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: nobat_db
      POSTGRES_USER: nobat_user
      POSTGRES_PASSWORD: nobat_password
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - nobat-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U nobat_user -d nobat_db']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nobat-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass nobat_redis_password
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - nobat-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nobat Backend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nobat-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: nobat_user
      DB_PASSWORD: nobat_password
      DB_DATABASE: nobat_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: nobat_redis_password
      REDIS_DB: 0
      JWT_SECRET: nobat_jwt_secret_key_2024
      JWT_REFRESH_SECRET: nobat_refresh_secret_key_2024
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
      OTP_EXPIRES_IN: 300
      THROTTLE_TTL: 60000
      THROTTLE_LIMIT: 10
    ports:
      - '3000:3000'
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nobat-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: nobat-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - nobat-network
    profiles:
      - production

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nobat-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@nobat.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - nobat-network
    profiles:
      - development

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: nobat-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:nobat_redis_password
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - nobat-network
    profiles:
      - development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  nobat-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
